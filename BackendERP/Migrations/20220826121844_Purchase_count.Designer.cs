// <auto-generated />
using System;
using BackendERP.Tables;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendERP.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220826121844_Purchase_count")]
    partial class Purchase_count
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendERP.Tables.Delivery_data", b =>
                {
                    b.Property<int>("Delivery_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Delivery_id");

                    b.HasIndex("User_id");

                    b.ToTable("Delivery_data");

                    b.HasData(
                        new
                        {
                            Delivery_id = 1,
                            Address = "Stefana Stefanovica 5",
                            City = "Novi Sad",
                            Phone_number = "+381 62 839 1 075",
                            User_id = 1
                        },
                        new
                        {
                            Delivery_id = 2,
                            Address = "Valentina Vodnika 17",
                            City = "Novi Sad",
                            Phone_number = "0654005831",
                            User_id = 2
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Newsletter", b =>
                {
                    b.Property<int>("Newsletter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Newsletter_id");

                    b.ToTable("Newsletters");

                    b.HasData(
                        new
                        {
                            Newsletter_id = 1,
                            Email = "milosmilinovic9@gmail.com"
                        },
                        new
                        {
                            Newsletter_id = 2,
                            Email = "nemanjamilunovic@.com"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Payment", b =>
                {
                    b.Property<int>("Payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Payment_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Payment_id");

                    b.HasIndex("User_id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Payment_id = 1,
                            Payment_date = new DateTime(2022, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 445.0,
                            User_id = 1
                        },
                        new
                        {
                            Payment_id = 2,
                            Payment_date = new DateTime(2021, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 460.0,
                            User_id = 2
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_id")
                        .HasColumnType("int");

                    b.Property<string>("Discount_price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Liter")
                        .HasColumnType("float");

                    b.Property<bool>("On_action")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_id");

                    b.HasIndex("Category_id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product_id = 1,
                            Category_id = 1,
                            Image_url = "",
                            Liter = 0.25,
                            On_action = true,
                            Price = 175.0,
                            Product_name = "Akva viva"
                        },
                        new
                        {
                            Product_id = 2,
                            Category_id = 2,
                            Image_url = "assets/images/Jelen.jfif",
                            Liter = 0.25,
                            On_action = false,
                            Price = 200.0,
                            Product_name = "Jelen"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Product_category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Category_id");

                    b.ToTable("Product_categories");

                    b.HasData(
                        new
                        {
                            Category_id = 1,
                            Category_name = "Voda"
                        },
                        new
                        {
                            Category_id = 2,
                            Category_name = "Pivo"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Role", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_id = 1,
                            Role_name = "Administrator"
                        },
                        new
                        {
                            Role_id = 2,
                            Role_name = "Kupac"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Purchase_count")
                        .HasColumnType("int");

                    b.Property<int>("Role_id")
                        .HasColumnType("int");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("User_id");

                    b.HasIndex("Role_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_id = 1,
                            Email = "milosmilinovic9@gmail.com",
                            LastName = "Milinovic",
                            Name = "Milos",
                            Password = "milos123",
                            Purchase_count = 0,
                            Role_id = 1,
                            User_name = "Mili99"
                        },
                        new
                        {
                            User_id = 2,
                            Email = "nmilunovic@gmail.com",
                            LastName = "Milunovic",
                            Name = "Nemanja",
                            Password = "milun123",
                            Purchase_count = 0,
                            Role_id = 2,
                            User_name = "Milun"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.User_service", b =>
                {
                    b.Property<int>("Service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Service_id");

                    b.ToTable("User_services");

                    b.HasData(
                        new
                        {
                            Service_id = 1,
                            Email = "milosmilinovic9@gmail.com",
                            Message = "Stvarno je dobar sajt!"
                        },
                        new
                        {
                            Service_id = 2,
                            Email = "nmilunovic@gmail.com",
                            Message = "Dsdscac csac cac s!"
                        });
                });

            modelBuilder.Entity("BackendERP.Tables.Delivery_data", b =>
                {
                    b.HasOne("BackendERP.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackendERP.Tables.Payment", b =>
                {
                    b.HasOne("BackendERP.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackendERP.Tables.Product", b =>
                {
                    b.HasOne("BackendERP.Tables.Product_category", "Product_category")
                        .WithMany()
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_category");
                });

            modelBuilder.Entity("BackendERP.Tables.User", b =>
                {
                    b.HasOne("BackendERP.Tables.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
